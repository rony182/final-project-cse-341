{
  "swagger": "2.0",
  "info": {
    "title": "Library API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": [
    "final-cse-341-group.onrender.com"
  ],
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "apiKey",
      "in": "header"
    }
  },
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint get all users",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint create a user",
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "User Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Alirio"
                },
                "lastName": {
                  "type": "string",
                  "example": "Mieres"
                },
                "email": {
                  "type": "string",
                  "example": "andres@test.com"
                },
                "password": {
                  "type": "string",
                  "example": "$ecretPassword"
                },
                "birthday": {
                  "type": "string",
                  "example": "06/19/2000"
                },
                "phone": {
                  "type": "string",
                  "example": "1234567890"
                },
                "address": {
                  "type": "string",
                  "example": "Calle 123"
                },
                "role": {
                  "type": "string",
                  "example": "USER_ROLE"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "birthday",
                "phone",
                "address",
                "role"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Contact",
            "in": "body",
            "description": "User Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "David"
                },
                "lastName": {
                  "type": "string",
                  "example": "Zalav"
                },
                "birthday": {
                  "type": "string",
                  "example": "06/19/1980"
                },
                "phone": {
                  "type": "string",
                  "example": "1234567890"
                },
                "address": {
                  "type": "string",
                  "example": "Calle 123"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "birthday",
                "phone",
                "address"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Login user",
        "parameters": [
          {
            "name": "Product",
            "in": "body",
            "description": "Product Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "test1@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authors/": {
      "post": {
        "tags": [
          "Authors"
        ],
        "summary": "Create a new author",
        "description": "Endpoint to create an author",
        "parameters": [
          {
            "name": "Author",
            "in": "body",
            "description": "Author Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Mario Vargas Llosa"
                        }
                      }
                    },
                    "birthdate": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date"
                        },
                        "example": {
                          "type": "string",
                          "example": "1936-03-28"
                        }
                      }
                    },
                    "nationality": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Peruvian"
                        }
                      }
                    },
                    "biography": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Lorem ipsum dolor sit amet"
                        }
                      }
                    },
                    "website": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "url"
                        },
                        "example": {
                          "type": "string",
                          "example": "https://mariovargasllosa.net"
                        }
                      }
                    },
                    "socialMediaLinks": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "Twitter"
                                    }
                                  }
                                },
                                "url": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "format": {
                                      "type": "string",
                                      "example": "url"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "https://www.twitter.com/mariovargasllosa"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "example": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Twitter"
                              },
                              "url": {
                                "type": "string",
                                "example": "https://www.twitter.com/mariovargasllosa"
                              }
                            }
                          }
                        }
                      }
                    },
                    "contactInformation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "Email"
                                    }
                                  }
                                },
                                "value": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "mariovargasllosa@example.com"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "example": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Email"
                              },
                              "value": {
                                "type": "string",
                                "example": "mariovargasllosa@example.com"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get all authors",
        "description": "Endpoint to get all authors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Get an author by ID",
        "description": "Endpoint to get an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "summary": "Update an author by ID",
        "description": "Updates an existing author in the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the author to update"
          },
          {
            "name": "Author",
            "in": "body",
            "description": "Author Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Mario Vargas Llosa"
                        }
                      }
                    },
                    "birthdate": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date"
                        },
                        "example": {
                          "type": "string",
                          "example": "1936-03-28"
                        }
                      }
                    },
                    "nationality": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Peruvian"
                        }
                      }
                    },
                    "biography": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Lorem ipsum dolor sit amet"
                        }
                      }
                    },
                    "website": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "url"
                        },
                        "example": {
                          "type": "string",
                          "example": "https://mariovargasllosa.net"
                        }
                      }
                    },
                    "socialMediaLinks": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "Twitter"
                                    }
                                  }
                                },
                                "url": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "format": {
                                      "type": "string",
                                      "example": "url"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "https://www.twitter.com/mariovargasllosa"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "example": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Twitter"
                              },
                              "url": {
                                "type": "string",
                                "example": "https://www.twitter.com/mariovargasllosa"
                              }
                            }
                          }
                        }
                      }
                    },
                    "contactInformation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "Email"
                                    }
                                  }
                                },
                                "value": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "example": {
                                      "type": "string",
                                      "example": "mariovargasllosa@example.com"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "example": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Email"
                              },
                              "value": {
                                "type": "string",
                                "example": "mariovargasllosa@example.com"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "summary": "Delete an author by ID",
        "description": "Endpoint to delete an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get a review by ID",
        "description": "Endpoint to get a review by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Reviews"
        ],
        "summary": "Update a review",
        "description": "Endpoint to update a review",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                },
                "date": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Delete a review",
        "description": "Endpoint to delete a review",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reviews/user/{userId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews for a user",
        "description": "Endpoint to get all reviews for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews",
        "description": "Endpoint to get all reviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create a new review",
        "description": "Endpoint to create a new review",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "example": "any"
                },
                "bookId": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Endpoint gets Book by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "description": "Endpoint deletes book by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiKey",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "description": "Endpoint updates an existing book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiKey",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Book",
            "in": "body",
            "description": "Book Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Bible"
                },
                "pages": {
                  "type": "string",
                  "example": "987"
                },
                "author": {
                  "type": "string",
                  "example": "64237db7f22b89b6a6c91aaa"
                },
                "datePublished": {
                  "type": "string",
                  "example": "1990-02-21"
                },
                "publisher": {
                  "type": "string",
                  "example": "Holy Publisher"
                }
              },
              "required": [
                "title",
                "pages",
                "author",
                "datePublished",
                "publisher"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books/": {
      "get": {
        "tags": [
          "Books"
        ],
        "description": "Endpoint gets all Books",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "description": "Endpoint creates a new Books",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Book",
            "in": "body",
            "description": "Book Information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "The Bible"
                },
                "pages": {
                  "type": "string",
                  "example": "987"
                },
                "author": {
                  "type": "string",
                  "example": "64237db7f22b89b6a6c91aaa"
                },
                "datePublished": {
                  "type": "string",
                  "example": "1990-02-21"
                },
                "publisher": {
                  "type": "string",
                  "example": "Holy Publisher"
                }
              },
              "required": [
                "title",
                "pages",
                "author",
                "datePublished",
                "publisher"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}